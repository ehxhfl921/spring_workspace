DROP TABLE validation_user PURGE;

CREATE TABLE validation_user(
	u_no 	NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 회원번호 자동 부여
	u_id	VARCHAR2(200) NOT NULL UNIQUE,									-- 회원아이디(이메일)
	u_pw	VARCHAR2(50) NOT NULL,											-- 비밀번호
	u_name 	VARCHAR2(20) NOT NULL,											-- 이름
	u_phone VARCHAR2(20) NOT NULL,											-- 전화번호
	u_birth	VARCHAR2(20) NOT NULL,											-- 생년월일
	u_addr	VARCHAR2(200),													-- 주소
	u_addr_detail	VARCHAR2(100),											-- 상세주소
	u_addr_post		VARCHAR2(10),											-- 우편번호
	u_point			NUMBER DEFAULT 0,										-- 포인트 점수
	u_info			char(1) DEFAULT 'y',									-- 개인정보 이용동의 
	u_date			TIMESTAMP DEFAULT SYSTIMESTAMP,							-- 계정 생성일
	u_visit_date	TIMESTAMP DEFAULT SYSTIMESTAMP,							-- 최종 방문일
	u_withdraw		char(1) DEFAULT 'n'										-- 회원 탈퇴 여부
);

ALTER TABLE validation_user ADD u_profile VARCHAR2(300);


CREATE TABLE validation_user(
	u_no 			NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 회원번호 자동 부여
	u_id			VARCHAR2(200) NOT NULL UNIQUE,									-- 회원아이디(이메일)
	u_pw			VARCHAR2(50) NOT NULL,											-- 비밀번호
	u_name 			VARCHAR2(20) NOT NULL,											-- 이름
	u_phone 		VARCHAR2(20) NOT NULL,											-- 전화번호
	u_birth			VARCHAR2(20) NOT NULL,											-- 생년월일
	u_addr			VARCHAR2(200),													-- 주소
	u_addr_detail	VARCHAR2(100),													-- 상세주소
	u_addr_post		VARCHAR2(10),													-- 우편번호
	u_point			NUMBER DEFAULT 0,												-- 포인트 점수
	u_info			char(1) DEFAULT 'y',											-- 개인정보 이용동의 
	u_date			TIMESTAMP DEFAULT SYSTIMESTAMP,									-- 계정 생성일
	u_visit_date	TIMESTAMP DEFAULT SYSTIMESTAMP,									-- 최종 방문일
	u_withdraw		char(1) DEFAULT 'n',											-- 회원 탈퇴 여부
	u_profile 		VARCHAR2(300)													-- 프로필 이미지
);

SELECT * FROM validation_user;

-- 로그인 반복 시도 차단 아이피 저장 테이블
CREATE TABLE ban_ip(
	ip VARCHAR2(200) primary key,
    cnt NUMBER DEFAULT 1,
    bandate TIMESTAMP DEFAULT SYSTIMESTAMP
);

SELECT * FROM ban_ip;

DELETE FROM ban_ip;

COMMIT

DROP TABLE re_tbl_board PURGE;

-- 원본글(질문글)에만 답변이 가능한 게시판 테이블
CREATE TABLE re_tbl_board (
    bno         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,   	-- 게시글 번호 (자동 증가)
    title       VARCHAR2(200) NOT NULL,              					-- 제목
    content     CLOB NOT NULL,                       					-- 내용
    origin      NUMBER DEFAULT 0,                    					-- 원본글 번호
    regdate     DATE DEFAULT SYSDATE,                					-- 게시글 등록 시간
    updatedate  DATE DEFAULT SYSDATE,                					-- 게시글 수정 시간
    viewcnt     NUMBER DEFAULT 0,                    					-- 조회 수
    showboard   VARCHAR2(10) DEFAULT 'y',            					-- 게시글 삭제요청 여부
    u_no        NUMBER NOT NULL,                     					-- 게시글 작성자 회원번호
    CONSTRAINT fk_re_tbl_uno FOREIGN KEY (u_no) REFERENCES validation_user(u_no)
);

-- 인덱스 생성 (origin, regdate 조합)
CREATE INDEX idx_re_tbl_origin_seq ON re_tbl_board(origin, regdate);

-- 샘플 데이터 등록
INSERT INTO re_tbl_board(title, content, u_no) 
SELECT title, content, u_no FROM re_tbl_board;

-- 게시글 번호로 원본 글 번호 수정
UPDATE re_tbl_board SET origin = bno;

COMMIT

-- ORA-25155: NATURAL 조인에 사용된 열은 식별자를 가질 수 없음
-- u_no 가 중복 될 수 있으므로 오류가 남
SELECT R.*, U.u_name AS writer
FROM re_tbl_board R
NATURAL JOIN validation_user U
ORDER BY R.bno DESC
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;

-- 게시글 등록 회원 번호로 회원 이름 검색
SELECT R.*, U.u_name AS writer
FROM re_tbl_board R
JOIN validation_user U
ON R.u_no = U.u_no  
ORDER BY R.bno DESC, regdate DESC 
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;

-- 검색 조건 추가 ex) title column 에서 행복이 포함된 게시글
SELECT R.*, U.u_name AS writer
FROM re_tbl_board R
JOIN validation_user U
ON R.u_no = U.u_no 
WHERE title LIKE '%' || '행복' || '%' 
ORDER BY R.bno DESC, regdate DESC 
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;


SELECT count(*) FROM re_tbl_board;

-- 검색 조건에 만족하는 게시글 개수
SELECT count(*) FROM re_tbl_board
WHERE title LIKE '%' || '행복' || '%'; 

-- 첨부 파일
-- fullName ==  /yyyy/MM/dd/s_ajsdfkhaklfshsfhsfsjkfd_file.png
CREATE TABLE tbl_attach (
    fullName VARCHAR2(300) NOT NULL,				-- 업로드된 파일 이름
    bno NUMBER NOT NULL,							-- 첨부파일 게시글 번호
    regdate TIMESTAMP DEFAULT SYSTIMESTAMP,			-- 첨부파일 등록 시간
    CONSTRAINT fb_tbl_attach FOREIGN KEY (bno) REFERENCES re_tbl_board(bno)
);

SELECT * FROM tbl_attach;

-- 댓글 테이블 생성
CREATE TABLE re_tbl_comment (
    cno NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  			-- 댓글 번호 (AUTO_INCREMENT 대신 IDENTITY)
    bno NUMBER NOT NULL,                                      			-- 댓글 작성 게시글 번호
    commentText CLOB NOT NULL,                                			-- 댓글 내용 (TEXT → CLOB)
    uno NUMBER NOT NULL,                                      			-- 작성자
    regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,     			-- 작성시간
    updatedate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  			-- 수정시간
    showcomment CHAR(1) DEFAULT 'y' CHECK (showcomment IN ('y','n')), 	-- 댓글 삭제 여부
    CONSTRAINT fk_re_tbl_bno FOREIGN KEY (bno)
        REFERENCES re_tbl_board (bno) ON DELETE CASCADE,
    CONSTRAINT fk_tbl_user_uno FOREIGN KEY (u_no)
        REFERENCES validation_user (u_no)
);

-- 게시글 번호로 정렬 인덱스 생성
CREATE INDEX idx_re_tbl_comment_bno ON re_tbl_comment (bno);



