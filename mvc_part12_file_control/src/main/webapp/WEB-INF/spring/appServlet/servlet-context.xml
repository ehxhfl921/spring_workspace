<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="net.koreate.common" />
	
	<!-- 
		MultipartResolver - file 데이터 처리용 빈
		일반 파라미터 정보와 파일 데이터를 분리해주는 역할
		개발자가 정의한 mapping 메서드에 File 파라미터가 존재하면
		이름이 multipartResolver인 Bean을 찾아서 처리하므로
		id="multipartResolver"로 등록되어 있어야 검색 가능
	 -->
	<!-- 
		<beans:bean id="multipartResolver" 
					class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/> 
	-->
	
	<beans:bean id="multipartResolver" 
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 
			요청 파라미터 인코딩 지정 기본은 ISO-8859-1
			CharacterEncodingFilter가 지정되어 있으면 의미 없음
			EncodingFilter가 없으면 defaultEncoding으로 지정된 언어셋으로 인코딩 지정
		 -->
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="10485760" /> <!-- 10MB default -1 -->
		<beans:property name="maxInMemorySize" value="10240" />  <!-- 10KB default 10KB -->
		<!-- 
			uploadTempDir은 server project 내부 경로 지정
			ServletContext - application 내부 요청 경로 지정 - 디스크 드라이브 절대 경로 지정 x
		 -->
		<beans:property name="uploadTempDir" value="temp" /> <!-- 업로드 파일 임시 저장소 -->
	</beans:bean>

	<!-- 프로젝트 외부 File System 업로드 경로 -->	
	<beans:bean id="uploadFileSystem" class="java.lang.String">
		<beans:constructor-arg value="C:\\Temp\\upload" />
	</beans:bean>

	<!-- 프로젝트 내부 파일 업로드 경로 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="upload" />
	</beans:bean>
</beans:beans>
